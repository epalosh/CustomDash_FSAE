//Code by Ethan Palosh
//for USC Racing

//LCD Screen Library
/*
  Universal 8bit Graphics Library, https://github.com/olikraus/u8glib/
*/

//notes:
/*
  screen width: 240px
*/

#include "U8glib.h"
#include "math.h"
#include "Adafruit_NeoPixel.h" //for LED stuff later...



// 8Bit Com: D0..D7: 2,3,4,5,6,7,8,9, cs=10, C/D=A5, wr=12, rd=11, reset=13
U8GLIB_T6963_240X64 u8g(0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 9);


//input variables
int rpm;
double bv = 12.64;
int coolantTemp = 208;
int oilPressure = 32;

//variables for math
int bvInt = 0;
int bvDec = 0;
int rpmWidth = 0;

//variables for output
char rpmStr[10];
char batteryVoltageStr[16];
char coolantTempStr[15];
char oilPressureStr[11];


//primary draw function (called every 50 ms in main loop)
void draw(void) {

  //dynamic math
  bvInt = (int)bv/1;
  //bvDec = (int)((bv - (int)bv) * 100); <<<<<<< UN-COMMENT FOR REAL DATA
  rpmWidth = rpm/27;


  //formatting dynamic variables
  snprintf (rpmStr, 10, "RPM: %d", rpm);
  snprintf (batteryVoltageStr, 16, "Battery: %0d.%dv", bvInt, bvDec);
  snprintf (coolantTempStr, 15, "Coolant: %0dF", coolantTemp);
  snprintf (oilPressureStr, 11, "Oil: %0dpsi", oilPressure);


  //drawing variables
  // u8g.drawStr(168, 32, rpmStr); //align right
  u8g.drawStr(84, 32, rpmStr); //align center
  u8g.drawStr(121, 62, batteryVoltageStr);
  u8g.drawStr(0, 52, oilPressureStr);
  u8g.drawStr(0, 64, coolantTempStr);


  //drawing rpm bar
  u8g.drawRBox(0, 2, rpmWidth, 16, 0); //dynamic

  //drawing static decorators
  u8g.drawRFrame(0, 0, 240, 20, 0);
  u8g.drawLine(0, 37, 240, 37);

}

void setup(void) {
  // flip screen, if required
  // u8g.setRot180();
  
  // set SPI backup if required
  //u8g.setHardwareBackup(u8g_backup_avr_spi);

  // assign default color value
  // if ( u8g.getMode() == U8G_MODE_R3G3B2 ) {
  //   u8g.setColorIndex(255);     // white
  // }
  // else if ( u8g.getMode() == U8G_MODE_GRAY2BIT ) {
  //   u8g.setColorIndex(3);         // max intensity
  // }
  // else if ( u8g.getMode() == U8G_MODE_BW ) {
  //   u8g.setColorIndex(1);         // pixel on
  // }
  // else if ( u8g.getMode() == U8G_MODE_HICOLOR ) {
  //   u8g.setHiColorByRGB(255,255,255);
  // }
  
  // pinMode(8, OUTPUT);

  //setup to happen once:
  u8g.setFont(u8g_font_8x13B);

}

void loop(void) {
  // picture loop
  u8g.firstPage();  
  do {
    draw();
  } while( u8g.nextPage() );
  


  //changing random numbers for funsies! (and testing ofc...)
  rpm = int(random(5000, 6000));
  bvDec = random(60, 64);
  coolantTemp = random(207, 209);
  oilPressure = random(30, 33);




  // rebuild the picture after some delay
  delay(50);
}





//extra

//supposedly a 240x38 bitmap of usc racing logo...
const uint8_t uscRacingLogo_bitmap [] U8G_PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 
	0x1f, 0xf0, 0x7f, 0xe0, 0x40, 0x00, 0x01, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x10, 0x00, 0x00, 
	0x40, 0x00, 0x01, 0x06, 0x00, 0x00, 0x08, 0x00, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xe0, 
	0x7f, 0xe0, 0x80, 0x00, 0x03, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x10, 0x00, 0x00, 0x40, 0x00, 
	0x01, 0x06, 0x00, 0x00, 0x08, 0x00, 0x00, 0x3f, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xe0, 0x7f, 0xc0, 
	0x80, 0x00, 0x02, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x20, 0x00, 0x00, 0xc0, 0x00, 0x03, 0x04, 
	0x00, 0x00, 0x10, 0x00, 0x00, 0x7f, 0xff, 0xf8, 0x03, 0xf8, 0x3f, 0xe0, 0xff, 0xc0, 0x80, 0x00, 
	0x02, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x20, 0x00, 0x00, 0x80, 0x00, 0x02, 0x04, 0x00, 0x00, 
	0x10, 0x00, 0x00, 0x7f, 0xff, 0xf8, 0x0f, 0xf0, 0x3f, 0xc0, 0xff, 0xc1, 0x80, 0x00, 0x02, 0x00, 
	0x00, 0x0f, 0xf8, 0x00, 0x00, 0x20, 0x00, 0x00, 0x80, 0x00, 0x02, 0x0c, 0x00, 0x00, 0x10, 0x00, 
	0x00, 0x7f, 0xff, 0xf8, 0x3e, 0x20, 0x3f, 0xc0, 0xff, 0xc1, 0x03, 0xff, 0xfc, 0x0f, 0xff, 0xff, 
	0xf0, 0x3f, 0xf0, 0x60, 0xff, 0xc0, 0x83, 0xff, 0xfe, 0x08, 0x1f, 0xf8, 0x30, 0x7f, 0xff, 0xff, 
	0xff, 0xf0, 0x38, 0x00, 0x3f, 0xc0, 0xff, 0x81, 0x00, 0x00, 0x04, 0x0f, 0xff, 0xff, 0xf0, 0x3f, 
	0xe0, 0x40, 0xff, 0x81, 0x03, 0xff, 0xfc, 0x08, 0x1f, 0xf8, 0x20, 0x60, 0x00, 0xff, 0xff, 0xf0, 
	0x73, 0xe0, 0x7f, 0xc1, 0xff, 0x81, 0x00, 0x00, 0x04, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x40, 
	0x00, 0x01, 0x03, 0xff, 0xfc, 0x08, 0x1f, 0xf0, 0x20, 0xc0, 0x00, 0xff, 0xff, 0xf0, 0x6f, 0xf0, 
	0x7f, 0x81, 0xff, 0x83, 0x00, 0x00, 0x0c, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x40, 0x00, 0x01, 
	0x07, 0xff, 0xfc, 0x18, 0x3f, 0xf0, 0x20, 0xc0, 0x00, 0xff, 0xff, 0xf0, 0x4f, 0x00, 0x7f, 0x81, 
	0xff, 0x82, 0x00, 0x00, 0x08, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0xc0, 0x00, 0x03, 0x07, 0xff, 
	0xfc, 0x10, 0x3f, 0xf0, 0x60, 0x80, 0x00, 0xff, 0xff, 0xe0, 0xdf, 0x00, 0x7f, 0x81, 0xff, 0x02, 
	0x00, 0x00, 0x08, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x80, 0x00, 0x02, 0x07, 0xff, 0xf8, 0x10, 
	0x3f, 0xf0, 0x40, 0x80, 0x01, 0xff, 0xff, 0xe0, 0x9f, 0x00, 0xff, 0x83, 0xff, 0x02, 0x00, 0x00, 
	0x08, 0x3f, 0xff, 0xff, 0xe0, 0x00, 0x20, 0x80, 0x00, 0x02, 0x07, 0xff, 0xf8, 0x10, 0x7f, 0xe0, 
	0x41, 0x80, 0x01, 0xff, 0xff, 0xe0, 0xbf, 0xf0, 0xff, 0x03, 0xff, 0x03, 0xff, 0xfc, 0x18, 0x3f, 
	0xff, 0xff, 0xe0, 0xc0, 0x3f, 0x83, 0xff, 0x02, 0x0f, 0xff, 0xf8, 0x30, 0x7f, 0xe0, 0x41, 0xff, 
	0x81, 0xff, 0xff, 0xc0, 0x3f, 0xf0, 0xff, 0x00, 0x00, 0x04, 0x00, 0x00, 0x10, 0x00, 0x00, 0x7f, 
	0xc0, 0xe0, 0x0f, 0x03, 0xff, 0x06, 0x00, 0x00, 0x18, 0x20, 0x7f, 0xe0, 0x80, 0x00, 0x01, 0xff, 
	0xff, 0xc0, 0x00, 0x01, 0xff, 0x00, 0x00, 0x04, 0x00, 0x00, 0x10, 0x00, 0x00, 0x7f, 0xc0, 0xf0, 
	0x03, 0x03, 0xff, 0x04, 0x00, 0x00, 0x10, 0x20, 0x7f, 0xe0, 0x80, 0x00, 0x03, 0xff, 0xff, 0xc0, 
	0x00, 0x01, 0xff, 0x00, 0x00, 0x04, 0x00, 0x00, 0x10, 0x00, 0x00, 0x7f, 0xc1, 0xf8, 0x01, 0x07, 
	0xfe, 0x04, 0x00, 0x00, 0x10, 0x20, 0xff, 0xc0, 0x80, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x01, 
	0xfe, 0x00, 0x00, 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x7f, 0x81, 0xfe, 0x01, 0x07, 0xfe, 0x04, 
	0x00, 0x00, 0x10, 0x40, 0xff, 0xc1, 0x80, 0x00, 0x03, 0xff, 0xff, 0x80, 0x00, 0x01, 0xfe, 0x00, 
	0x00, 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0xff, 0x81, 0xff, 0x03, 0x07, 0xfe, 0x0c, 0x00, 0x00, 
	0x30, 0x40, 0xff, 0xc1, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff
};
